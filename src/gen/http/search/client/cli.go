// Code generated by goa v3.0.7, DO NOT EDIT.
//
// search HTTP client CLI support package
//
// Command:
// $ goa gen github.com/k-yomo/elastic_blog_search/src/design -o src/

package client

import (
	"fmt"
	"strconv"

	search "github.com/k-yomo/elastic_blog_search/src/gen/search"
)

// BuildSearchPayload builds the payload for the search search endpoint from
// CLI flags.
func BuildSearchPayload(searchSearchQuery string, searchSearchPage string, searchSearchPageSize string) (*search.SearchPayload, error) {
	var err error
	var query string
	{
		query = searchSearchQuery
	}
	var page uint
	{
		if searchSearchPage != "" {
			var v uint64
			v, err = strconv.ParseUint(searchSearchPage, 10, 64)
			page = uint(v)
			if err != nil {
				return nil, fmt.Errorf("invalid value for page, must be UINT")
			}
		}
	}
	var pageSize uint
	{
		if searchSearchPageSize != "" {
			var v uint64
			v, err = strconv.ParseUint(searchSearchPageSize, 10, 64)
			pageSize = uint(v)
			if err != nil {
				return nil, fmt.Errorf("invalid value for pageSize, must be UINT")
			}
		}
	}
	payload := &search.SearchPayload{
		Query:    query,
		Page:     page,
		PageSize: pageSize,
	}
	return payload, nil
}
