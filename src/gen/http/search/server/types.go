// Code generated by goa v3.0.7, DO NOT EDIT.
//
// search HTTP server types
//
// Command:
// $ goa gen github.com/k-yomo/elastic_blog_search/src/design -o src/

package server

import (
	search "github.com/k-yomo/elastic_blog_search/src/gen/search"
	searchviews "github.com/k-yomo/elastic_blog_search/src/gen/search/views"
)

// PostResponseCollection is the type of the "search" service "search" endpoint
// HTTP response body.
type PostResponseCollection []*PostResponse

// PostResponse is used to define fields on response body types.
type PostResponse struct {
	// Post's id
	ID string `form:"id" json:"id" xml:"id"`
	// Post's title
	Title string `form:"title" json:"title" xml:"title"`
	// Post's description
	Description string `form:"description" json:"description" xml:"description"`
}

// NewPostResponseCollection builds the HTTP response body from the result of
// the "search" endpoint of the "search" service.
func NewPostResponseCollection(res searchviews.PostCollectionView) PostResponseCollection {
	body := make([]*PostResponse, len(res))
	for i, val := range res {
		body[i] = &PostResponse{
			ID:          *val.ID,
			Title:       *val.Title,
			Description: *val.Description,
		}
	}
	return body
}

// NewSearchPayload builds a search service search endpoint payload.
func NewSearchPayload(query string, page *uint, pageSize *uint) *search.SearchPayload {
	return &search.SearchPayload{
		Query:    query,
		Page:     page,
		PageSize: pageSize,
	}
}
