// Code generated by goa v3.0.7, DO NOT EDIT.
//
// register HTTP client types
//
// Command:
// $ goa gen github.com/k-yomo/elastic_blog_search/src/design -o src/

package client

import (
	register "github.com/k-yomo/elastic_blog_search/src/gen/register"
)

// RegisterRequestBody is the type of the "register" service "register"
// endpoint HTTP request body.
type RegisterRequestBody struct {
	Posts []*PostRequestBody `form:"posts" json:"posts" xml:"posts"`
}

// PostRequestBody is used to define fields on request body types.
type PostRequestBody struct {
	// Post's id
	ID *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	// Post's title
	Title *string `form:"title,omitempty" json:"title,omitempty" xml:"title,omitempty"`
	// Post's description
	Description *string `form:"description,omitempty" json:"description,omitempty" xml:"description,omitempty"`
	// Post's body
	Body *string `form:"body,omitempty" json:"body,omitempty" xml:"body,omitempty"`
}

// NewRegisterRequestBody builds the HTTP request body from the payload of the
// "register" endpoint of the "register" service.
func NewRegisterRequestBody(p *register.RegisterPayload) *RegisterRequestBody {
	body := &RegisterRequestBody{}
	if p.Posts != nil {
		body.Posts = make([]*PostRequestBody, len(p.Posts))
		for i, val := range p.Posts {
			body.Posts[i] = marshalRegisterPostToPostRequestBody(val)
		}
	}
	return body
}
