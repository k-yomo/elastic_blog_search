// Code generated by goa v3.0.7, DO NOT EDIT.
//
// search endpoints
//
// Command:
// $ goa gen github.com/k-yomo/elastic_blog_search/src/design -o src/

package search

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "search" service endpoints.
type Endpoints struct {
	Search goa.Endpoint
}

// NewEndpoints wraps the methods of the "search" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Search: NewSearchEndpoint(s),
	}
}

// Use applies the given middleware to all the "search" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Search = m(e.Search)
}

// NewSearchEndpoint returns an endpoint function that calls the method
// "search" of service "search".
func NewSearchEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*SearchPayload)
		res, err := s.Search(ctx, p)
		if err != nil {
			return nil, err
		}
		vres := NewViewedPostCollection(res, "default")
		return vres, nil
	}
}
