// Code generated by goa v3.0.7, DO NOT EDIT.
//
// search service
//
// Command:
// $ goa gen github.com/k-yomo/elastic_blog_search/src/design -o src/

package search

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// search service searches blog posts with given params
type Service interface {
	// Search implements search.
	Search(context.Context, *SearchPayload) (res *SearchResult, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "search"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [1]string{"search"}

// search params
type SearchPayload struct {
	// search query
	Query string
	// page
	Page uint
	// results per page
	PageSize uint
}

// SearchResult is the result type of the search service search method.
type SearchResult struct {
	Posts     PostCollection
	Page      uint
	TotalPage uint
}

type PostCollection []*Post

type Post struct {
	// Post's id
	ID string
	// Post's title
	Title string
	// Post's description
	Description string
}

// MakeBadRequest builds a goa.ServiceError from an error.
func MakeBadRequest(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "BadRequest",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}

// MakeInternal builds a goa.ServiceError from an error.
func MakeInternal(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "internal",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
		Fault:   true,
	}
}
